version: '3.0'
services:
  mysql:
    image: mysql:latest
    container_name: mysql
    environment: 
      MYSQL_ROOT_PASSWORD: root 
    ports:
      - "3306:3306"
    networks:
      - microservices-network
  
  consul:
    image: consul:1.15.4
    container_name: consul-container
    ports:
      - "8500:8500"
    networks:
      - microservices-network
  
  gateway-service:
    build:
      context: ./gateway
    ports:
      - "8888:8888"
    depends_on:
      - mysql
      - consul
    networks:
      - microservices-network
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: 'true'

  client-service:
    build:
      context: ./clientService
    ports:
      - "8088:8088"
    depends_on:
      - mysql
      - consul
      - gateway-service
    networks:
      - microservices-network
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: 'true'
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/Micro_ClientDB?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

  voiture-service:
    build:
      context: ./voitureService
    ports:
      - "8089:8089"
    depends_on:
      - mysql
      - consul
      - gateway-service
    networks:
      - microservices-network
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: 'true'
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/Micro_VoitureDB?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 5s
      timeout: 2s
      retries: 100

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
